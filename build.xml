<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="core_gotest">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../MyEclipse/MyEclipse 10"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <property name="lib.dir" value="lib"/>  
    <property name="src.dir" value="src"/>  
    <property name="classes.dir" value="bin"/>  
    <property name="output.dir" value="out"/>  
    <property name="jarname" value="core.jar"/>  
    <property name="mainclass" value="com.edai.server.EDAIServer"/>

    <path id="core_gotest.classpath">
        <fileset dir="${lib.dir}">	
	    <include name="*.jar"/>
	</fileset>
    </path>

    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="true" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="core_gotest.classpath"/>
        </javac>
    </target>

    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>

    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>

    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>

    <target name="jar" depends="init">
	<copy todir="${classes.dir}/lib">
	    <fileset dir="${lib.dir}"/>  
	</copy> 
	<pathconvert property="mf.classpath" pathsep=" "> 
	    <mapper> 
	        <chainedmapper>
		    <flattenmapper/>
		    <globmapper from="*" to="lib/*"/>
		</chainedmapper>
	    </mapper>
	    <path refid="core_gotest.classpath"/>
	</pathconvert>
	<jar destfile="${output.dir}/${jarname}" basedir="${classes.dir}">
	    <manifest>
		<attribute name="Main-class" value="${mainclass}"/> 
		<attribute name="Class-Path" value="${mf.classpath}"/>
	    </manifest>
	</jar>
    </target>
</project>
